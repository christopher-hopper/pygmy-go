---
language: go
go:
  - "1.14.2"

matrix:
  include:

    - name: Testing Framework
      os: linux
      services: docker
      before_install:
        - go mod download
        - diff -u <(echo -n) <(gofmt -d $(find . -not -path "./vendor/*" -name "*.go"));
        - GO111MODULE=on go vet $(go list ./...);
        - docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v1.25.1 golangci-lint run -v
      script:
        # Build
        - make build
        # Test
        - go test -v

    - name: Linux build w/ tests
      os: linux
      services: docker
      before_install:
        - go mod download
        - diff -u <(echo -n) <(gofmt -d $(find . -not -path "./vendor/*" -name "*.go"));
        - GO111MODULE=on go vet $(go list ./...);
        - docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v1.25.1 golangci-lint run -v
      script:
        # Build
        - go build -o pygmy-go-linux-x86
        # Run pygmy
        - ./pygmy-go-linux-x86 status;
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml up;
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml status;
        # Test the amazeeio-network for expected results
        - >
          docker network inspect amazeeio-network | jq '.[].Name' | grep "amazeeio-network";
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].Name' | grep "amazeeio-haproxy";
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].Name' | grep "amazeeio-mailhog";
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].Name' | grep "amazeeio-portainer";
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].IPv4Address';
          docker network inspect amazeeio-network | jq '.[].Containers' | jq '.[].IPv4Address' | grep "10.99.99.";
        # Test for configured container tags.
        - >
          docker inspect amazeeio-dnsmasq   | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-dnsmasq   | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-dnsmasq   | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
        - >
          docker inspect amazeeio-haproxy   | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-haproxy   | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-haproxy   | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
        - >
          docker inspect amazeeio-portainer | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-portainer | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-portainer | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
        - >
          docker inspect amazeeio-ssh-agent | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-ssh-agent | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-ssh-agent | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
        - >
          docker inspect amazeeio-mailhog   | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect amazeeio-mailhog   | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect amazeeio-mailhog   | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";

        # Real-world Drupal test.
        - git clone https://github.com/amazeeio/drupal-example.git drupal8-lagoon && cd drupal8-lagoon
        - docker-compose up -d
        - docker-compose exec cli composer install
        - curl --HEAD http://drupal-example.docker.amazee.io
        # Cleanup example
        - docker-compose down
        - cd ../
        # Cleanup pygmy
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml down;
        - ./pygmy-go-linux-x86 --config examples/pygmy.travis.yml clean;

    - name: Multiplatform build (for release)
      os: linux
      services: docker
      before_install:
        - go mod download
        - diff -u <(echo -n) <(gofmt -d $(find . -not -path "./vendor/*" -name "*.go"));
        - GO111MODULE=on go vet $(go list ./...);

      script:
        - make build
        - docker image rm pygmy-go --force || true

    - name: Windows build
      os: windows
      services: docker
      before_install:
        - go mod download
        - GO111MODULE=on go vet $(go list ./...);

      script:
        - powershell -Command "[Environment]::GetEnvironmentVariable('LCOW_SUPPORTED', 'Machine')"
        - powershell -Command "[Environment]::SetEnvironmentVariable('LCOW_SUPPORTED', '1', 'Machine')"
        - powershell -Command "[Environment]::GetEnvironmentVariable('LCOW_SUPPORTED', 'Machine')"
        - powershell -Command Restart-Service Docker
        - powershell -Command Docker version
        - export PYGMY_PATH=pygmy-go.exe;

        - go mod vendor
        - rm -f go.mod
        - rm -f go.sum
        - go build -o pygmy-go.exe .
        - cp pygmy-go.exe builds/pygmy-go.exe

        - builds/${PYGMY_PATH} status;
        - builds/${PYGMY_PATH} up;
        - builds/${PYGMY_PATH} down;

deploy:
  provider: releases
  api_key:
    secure: LOdLYTgibvv9PWpYO6ksIXeYW8EQjNmtiSZ3Hx2pBRoqs9dzvKxH4Ne+1oITIyXyCS9W99MTMmwtO8CxsSHqUqAhRBSEtxUfBFhhl4DFfVWbroAJ8x05uwYpqEWPr3RjZz1Abn/tqDVQ9fd4/ihTUvZcE+2ocaTs58W+mtrU0jRwAlv364EbmfpXRhWdA6STC+eJhMxHmFfrijIzmtGqIiT/w3W2eeA49uCmYfwrsU5Vy82nlTlDbkIRFj0sT2CGeoYSV7trNWcGsslJDUHyw7WZs2OpwXD4wiqqpfaz7P8+CsY7MOEWdWb1nc9Wa8mrj+HbwIPo9Di00EkQLEzndBP7nPgU/36suRB3NNvyS33Jg+VzpXPU/2w20a2R+eJYZQr/B06L9sKeeCtKQFPcwYCG7uwahhYiJFQPfPS5mCZjnbzQvNGw3ExEGrT8jCu/Dy/+dG8mSaddYciGpfiaNswnGFAyt7yIeYQVwG28qvkhaom54TNj1Ssuyx2QIqHqGqR1x2KGMUNbH4gaiRLSom48dnLxuzGPplND8ur+UcKIWyLQHlnm3nBIbURgVndfLn5brQD9jpXHNhUKArT/4f9s/OiDnLtzp+55+xFUddliVwEnJO56m+9ZO5HbUveIilko2/afIajEOoDKhj5rHpEhSYvHIMzEpFQ8CGvbQtY=
  skip_cleanup: true
  file: builds/pygmy*
  file_glob: true
  on:
    repo: fubarhouse/pygmy-go
    branch: master
    tags: true

notifications:
  slack: fubarhouse:upHoIzmKb4ikkBOt2cOwgKXY